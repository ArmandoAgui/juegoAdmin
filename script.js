// Preguntas y respuestas
const quiz = [
    {
        question: "En un entorno multitenant, tienes una aplicaci√≥n cr√≠tica que requiere un aislamiento completo de datos y recursos. ¬øCu√°l de las siguientes afirmaciones describe mejor c√≥mo Oracle puede proporcionar esta funcionalidad?",
        options: [
            "A) Utilizar m√∫ltiples bases de datos independientes en diferentes servidores.",
            "B) Crear una base de datos contenedora (CDB) y m√∫ltiples pluggable databases (PDB), donde cada PDB est√° aislada.",
            "C) Ejecutar la aplicaci√≥n en un √∫nico esquema dentro de la CDB.",
            "D) Configurar diferentes usuarios dentro de una sola PDB para manejar datos."
        ],
        answer: 1,
        image: "./assets/among-us.gif"
    },
    {
        question: "Un administrador necesita crear una nueva PDB basada en una plantilla existente. ¬øQu√© componente de la arquitectura multitenant debe usar como base para este proceso?",
        options: [
            "A) CDB$ROOT",
            "B) PDB$SEED",
            "C) Una PDB existente",
            "D) Los metadatos del diccionario de datos compartidos"
        ],
        answer: 1,
        image: "./assets/Among-US-Gif-13.gif"
    },
    {
        question: "Un cliente solicita la migraci√≥n de su base de datos a otro servidor con una instancia de Oracle. ¬øCu√°l es una ventaja clave de las PDBs en este proceso?",
        options: [
            "A) Las PDBs pueden desconectarse de un CDB y conectarse a otro f√°cilmente.",
            "B) Las PDBs se replican autom√°ticamente en el nuevo servidor.",
            "C) La migraci√≥n de PDBs no requiere acceso a los datos.",
            "D) Las PDBs no necesitan reiniciarse tras la migraci√≥n."
        ],
        answer: 0,
        image: "./assets/Among-US-Gif-14.gif"
    },
    {
        question: "Tienes una CDB con m√∫ltiples PDBs. ¬øQu√© sucede si un usuario realiza un cambio en el componente Root Container (CDB$ROOT)?",
        options: [
            "A) El cambio afecta √∫nicamente al usuario conectado.",
            "B) El cambio afecta √∫nicamente al PDB que est√° activo.",
            "C) El cambio puede afectar a todas las PDBs dentro de la CDB.",
            "D) El cambio no tiene impacto en las PDBs."
        ],
        answer: 2,
        image: "./assets/Among-US-Gif-15.gif"
    },
    {
        question: "Un desarrollador necesita acceder a una PDB espec√≠fica dentro de una CDB. ¬øQu√© debe incluir en su configuraci√≥n de conexi√≥n?",
        options: [
            "A) El nombre del Root Container (CDB$ROOT).",
            "B) La plantilla utilizada para crear la PDB.",
            "C) El nombre del PDB al que desea conectarse.",
            "D) Los metadatos compartidos del diccionario de datos."
        ],
        answer: 2,
        image: "./assets/Among-US-Gif-16.gif"
    }
];


let currentQuestion = 0;
let score = 0;

const questionElement = document.getElementById("question");
const optionsElement = document.getElementById("options");
const resultElement = document.getElementById("result");

const popupCorrect = document.getElementById("popup-correct");
const popupWrong = document.getElementById("popup-wrong");

// Sonidos (Ajusta la ruta seg√∫n la ubicaci√≥n real de los archivos)
const correctSound = new Audio("./assets/correct.mp3"); // Ruta al archivo de aciertos
const wrongSound = new Audio("./assets/wrong.mp3");    // Ruta al archivo de errores

function loadQuestion() {
    if (currentQuestion < quiz.length) {
        const q = quiz[currentQuestion];
        document.getElementById("question-img").src = q.image; // Imagen de la pregunta
        questionElement.innerHTML = q.question; // Texto de la pregunta
        optionsElement.innerHTML = "";
        q.options.forEach((option, index) => {
            const button = document.createElement("button");
            button.textContent = option;
            button.onclick = () => checkAnswer(index);
            optionsElement.appendChild(button);
        });
    } else {
        showResult();
    }
}

function checkAnswer(selected) {
    if (selected === quiz[currentQuestion].answer) {
        score++;
        correctSound.play(); // Reproduce sonido de acierto
        popupCorrect.classList.remove("hidden");
    } else {
        wrongSound.play(); // Reproduce sonido de error
        popupWrong.classList.remove("hidden");
    }
}

function closePopup() {
    popupCorrect.classList.add("hidden");
    popupWrong.classList.add("hidden");
    currentQuestion++;
    loadQuestion();
}

function showResult() {
    // Ocultar todo el contenedor de la tarjeta
    const questionCard = document.querySelector(".question-card");
    questionCard.style.display = "none"; // Esto elimina el remanente de la tarjeta

    // Resultado general
    let resultMessage = `¬°Juego terminado! Obtuviste ${score} de ${quiz.length} puntos.`;

    // Felicitaciones si hay 4 o m√°s respuestas correctas
    if (score >= 4) {
        resultMessage += `      
        <div class="congratulations">
          ¬°Felicidades! Has demostrado ser el Admin de bases de datos üöÄ
          <img src="./assets/victory.gif" alt="Victoria" class="victory-gif">
        </div>
      `;
    }
    // Mensaje de Game Over
    else if (score <= 3) {
        resultMessage += `
      <div class="game-over">
        <p>¬°Game Over! Necesitas estudiar m√°s sobre bases de datos üõ†Ô∏è</p>
        <img src="./assets/ejected.gif" alt="Game Over" class="game-over-gif">
      </div>
    `;
    }

    // Mostrar el mensaje de resultado
    resultElement.innerHTML = resultMessage;
}



// Cargar la primera pregunta
loadQuestion();
